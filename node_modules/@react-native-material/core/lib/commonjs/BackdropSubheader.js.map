{"version":3,"sources":["BackdropSubheader.tsx"],"names":["BackdropSubheader","title","leading","trailing","divider","color","style","contentContainerStyle","titleContainerStyle","leadingContainerStyle","trailingContainerStyle","palette","styles","container","marginHorizontal","contentContainer","flexDirection","alignItems","paddingVertical","titleContainer","flex","leadingContainer","marginEnd","trailingContainer","marginStart","main","size"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAwBA,MAAMA,iBAAmD,GAAG,QAWtD;AAAA,MAXuD;AAC3DC,IAAAA,KAD2D;AAE3DC,IAAAA,OAF2D;AAG3DC,IAAAA,QAH2D;AAI3DC,IAAAA,OAAO,GAAG,IAJiD;AAK3DC,IAAAA,KAAK,GAAG,YALmD;AAM3DC,IAAAA,KAN2D;AAO3DC,IAAAA,qBAP2D;AAQ3DC,IAAAA,mBAR2D;AAS3DC,IAAAA,qBAT2D;AAU3DC,IAAAA;AAV2D,GAWvD;AACJ,QAAMC,OAAO,GAAG,sCAAgBN,KAAhB,CAAhB;AAEA,QAAMO,MAAM,GAAG,0BAAU,OAAO;AAC9BC,IAAAA,SAAS,EAAE;AACTC,MAAAA,gBAAgB,EAAE;AADT,KADmB;AAI9BC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,aAAa,EAAE,KADC;AAEhBC,MAAAA,UAAU,EAAE,QAFI;AAGhBC,MAAAA,eAAe,EAAE;AAHD,KAJY;AAS9BC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAE;AADQ,KATc;AAY9BC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,SAAS,EAAE;AADK,KAZY;AAe9BC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,WAAW,EAAE;AADI;AAfW,GAAP,CAAV,CAAf;AAoBA,sBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACZ,MAAM,CAACC,SAAR,EAAmBP,KAAnB;AAAb,kBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACM,MAAM,CAACG,gBAAR,EAA0BR,qBAA1B;AAAb,KACG,CAAC,CAACL,OAAF,iBACC,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACU,MAAM,CAACS,gBAAR,EAA0BZ,qBAA1B;AAAb,KACG,OAAOP,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAAC;AAAEG,IAAAA,KAAK,EAAEM,OAAO,CAACc,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAAD,CAAvC,GAA6ExB,OADhF,CAFJ,eAME,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACU,MAAM,CAACO,cAAR,EAAwBX,mBAAxB;AAAb,KACG,OAAOP,KAAP,KAAiB,QAAjB,gBACC,6BAAC,aAAD;AAAM,IAAA,OAAO,EAAC,WAAd;AAA0B,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAEM,OAAO,CAACc;AAAjB;AAAjC,KACGxB,KADH,CADD,GAKCA,KANJ,CANF,EAeG,CAAC,CAACE,QAAF,iBACC,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACS,MAAM,CAACW,iBAAR,EAA2Bb,sBAA3B;AAAb,KACG,OAAOP,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAAC;AAAEE,IAAAA,KAAK,EAAEM,OAAO,CAACc,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAAD,CAAzC,GAA+EvB,QADlF,CAhBJ,CADF,EAsBG,OAAOC,OAAP,KAAmB,SAAnB,GAA+BA,OAAO,iBAAI,6BAAC,gBAAD,OAA1C,GAAwDA,OAtB3D,CADF;AA0BD,CA5DD;;eA8DeJ,iB","sourcesContent":["import React from 'react';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport Text from './Text';\nimport Divider from './Divider';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface BackdropSubheaderProps {\n  title?: string | React.ReactElement;\n\n  leading?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n\n  trailing?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n\n  divider?: boolean | React.ReactElement;\n\n  color?: Color;\n\n  style?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  titleContainerStyle?: StyleProp<ViewStyle>;\n\n  leadingContainerStyle?: StyleProp<ViewStyle>;\n\n  trailingContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst BackdropSubheader: React.FC<BackdropSubheaderProps> = ({\n  title,\n  leading,\n  trailing,\n  divider = true,\n  color = 'on-surface',\n  style,\n  contentContainerStyle,\n  titleContainerStyle,\n  leadingContainerStyle,\n  trailingContainerStyle,\n}) => {\n  const palette = usePaletteColor(color);\n\n  const styles = useStyles(() => ({\n    container: {\n      marginHorizontal: 16,\n    },\n    contentContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingVertical: 12,\n    },\n    titleContainer: {\n      flex: 1,\n    },\n    leadingContainer: {\n      marginEnd: 16,\n    },\n    trailingContainer: {\n      marginStart: 16,\n    },\n  }));\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={[styles.contentContainer, contentContainerStyle]}>\n        {!!leading && (\n          <View style={[styles.leadingContainer, leadingContainerStyle]}>\n            {typeof leading === 'function' ? leading({ color: palette.main, size: 24 }) : leading}\n          </View>\n        )}\n        <View style={[styles.titleContainer, titleContainerStyle]}>\n          {typeof title === 'string' ? (\n            <Text variant=\"subtitle1\" style={{ color: palette.main }}>\n              {title}\n            </Text>\n          ) : (\n            title\n          )}\n        </View>\n        {!!trailing && (\n          <View style={[styles.trailingContainer, trailingContainerStyle]}>\n            {typeof trailing === 'function' ? trailing({ color: palette.main, size: 24 }) : trailing}\n          </View>\n        )}\n      </View>\n      {typeof divider === 'boolean' ? divider && <Divider /> : divider}\n    </View>\n  );\n};\n\nexport default BackdropSubheader;\n"]}