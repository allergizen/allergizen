{"version":3,"sources":["Pressable.tsx"],"names":["Pressable","pressEffect","Platform","select","android","web","default","pressEffectColor","onLayout","onPressIn","onPressOut","onFocus","onBlur","android_ripple","onMouseEnter","onMouseLeave","children","rest","main","color","size","setSize","width","height","ripples","setRipples","handleLayout","event","nativeEvent","layout","pressed","setPressed","handlePressIn","locationX","locationY","x","y","scale","Animated","Value","opacity","ripple","key","Date","now","Math","random","style","start","top","transform","prevState","timing","toValue","max","abs","easing","Easing","out","ease","duration","useNativeDriver","handlePressOut","length","slice","focused","setFocused","handleFocus","handleBlur","hovered","setHovered","handleMouseEnter","handleMouseLeave","alpha","hex","undefined","StyleSheet","absoluteFill","backgroundColor","disabled","transition","styles","effectContainer","map","create","overflow","position","borderRadius"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  NativeSyntheticEvent,\n  Platform,\n  Pressable as RNPressable,\n  PressableProps as RNPressableProps,\n  StyleSheet,\n  TargetedEvent,\n  View,\n} from 'react-native';\nimport chroma from 'chroma-js';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\n\nexport interface PressableProps extends RNPressableProps {\n  pressEffect?: 'none' | 'highlight' | 'ripple' | 'android-ripple';\n\n  pressEffectColor?: Color;\n\n  onMouseEnter?: (event: NativeSyntheticEvent<TargetedEvent>) => void;\n\n  onMouseLeave?: (event: NativeSyntheticEvent<TargetedEvent>) => void;\n\n  style?: any;\n}\n\nconst Pressable: React.FC<PressableProps> = ({\n  pressEffect = Platform.select({ android: 'android-ripple', web: 'ripple', default: 'highlight' }),\n  pressEffectColor = 'on-background',\n  onLayout,\n  onPressIn,\n  onPressOut,\n  onFocus,\n  onBlur,\n  android_ripple,\n  onMouseEnter,\n  onMouseLeave,\n  children,\n  ...rest\n}) => {\n  const { main: color } = usePaletteColor(pressEffectColor);\n\n  const [size, setSize] = useState({ width: 0, height: 0 });\n\n  const [ripples, setRipples] = useState<{ key: string; style: any }[]>([]);\n\n  const handleLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      const { width, height } = event.nativeEvent.layout;\n      setSize({ width, height });\n      onLayout?.(event);\n    },\n    [onLayout]\n  );\n\n  const [pressed, setPressed] = useState(false);\n\n  const handlePressIn = useCallback(\n    (event: GestureResponderEvent) => {\n      setPressed(true);\n      onPressIn?.(event);\n\n      if (pressEffect === 'ripple') {\n        const { locationX, locationY } = event.nativeEvent;\n\n        const x = (locationX ?? size.width / 2) - 0.5;\n        const y = (locationY ?? size.height / 2) - 0.5;\n\n        const scale = new Animated.Value(0);\n        const opacity = new Animated.Value(1);\n\n        const ripple = {\n          key: `${Date.now() + Math.random()}`,\n          style: { start: x, top: y, transform: [{ scale }], opacity },\n        };\n\n        setRipples((prevState) => [...prevState, ripple]);\n\n        Animated.timing(scale, {\n          toValue: Math.max(\n            size.width * 1.25 + Math.abs(size.width / 2 - x) * 2,\n            size.height * 1.25 + Math.abs(size.height / 2 - y) * 2\n          ),\n          easing: Easing.out(Easing.ease),\n          duration: 400,\n          useNativeDriver: false,\n        }).start();\n      }\n    },\n    [onPressIn, pressEffect, size]\n  );\n\n  const handlePressOut = useCallback(\n    (event: GestureResponderEvent) => {\n      setPressed(false);\n      onPressOut?.(event);\n\n      if (pressEffect === 'ripple') {\n        Animated.timing(ripples[ripples.length - 1].style.opacity, {\n          toValue: 0,\n          easing: Easing.out(Easing.ease),\n          duration: 400,\n          useNativeDriver: false,\n        }).start(() => {\n          setRipples((prevState) => prevState.slice(1));\n        });\n      }\n    },\n    [pressEffect, ripples, onPressOut]\n  );\n\n  const [focused, setFocused] = useState(false);\n\n  const handleFocus = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setFocused(true);\n      onFocus?.(event);\n    },\n    [onFocus]\n  );\n\n  const handleBlur = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setFocused(false);\n      onBlur?.(event);\n    },\n    [onBlur]\n  );\n\n  const [hovered, setHovered] = useState(false);\n\n  const handleMouseEnter = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setHovered(true);\n      onMouseEnter?.(event);\n    },\n    [onMouseEnter]\n  );\n\n  const handleMouseLeave = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setHovered(false);\n      onMouseLeave?.(event);\n    },\n    [onMouseLeave]\n  );\n\n  return (\n    <RNPressable\n      android_ripple={\n        pressEffect === 'android-ripple' ? android_ripple ?? { color: chroma(color).alpha(0.26).hex() } : undefined\n      }\n      onLayout={handleLayout}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      {...({ onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave } as any)}\n      {...rest}\n    >\n      <View\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            backgroundColor: hovered && !rest.disabled ? chroma(color).alpha(0.04).hex() : 'transparent',\n          },\n          { transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms' } as any,\n        ]}\n      />\n\n      {focused && !rest.disabled && (\n        <View style={[StyleSheet.absoluteFill, { backgroundColor: chroma(color).alpha(0.12).hex() }]} />\n      )}\n\n      {pressEffect === 'highlight' && pressed && (\n        <View style={[StyleSheet.absoluteFill, { backgroundColor: chroma(color).alpha(0.26).hex() }]} />\n      )}\n\n      {pressEffect === 'ripple' && ripples.length !== 0 && (\n        <View style={[StyleSheet.absoluteFill, styles.effectContainer]}>\n          {ripples.map((ripple) => (\n            <Animated.View\n              key={ripple.key}\n              style={[styles.ripple, { backgroundColor: chroma(color).alpha(0.1).hex() }, ripple.style]}\n            />\n          ))}\n        </View>\n      )}\n\n      {children}\n    </RNPressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  effectContainer: {\n    overflow: 'hidden',\n  },\n  ripple: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    borderRadius: 0.5,\n  },\n});\n\nexport default Pressable;\n"]}