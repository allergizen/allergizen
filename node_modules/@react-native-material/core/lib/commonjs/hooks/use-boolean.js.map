{"version":3,"sources":["use-boolean.ts"],"names":["useBoolean","initialState","value","setValue","on","off","toggle","prev"],"mappings":";;;;;;;AAAA;;AAIA;AACA;AACA;AACA;AACA;AACO,MAAMA,UAAU,GAAG,YAAwC;AAAA,MAAvCC,YAAuC,uEAAV,KAAU;AAChE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB,qBAASF,YAAT,CAA1B;AAEA,QAAMG,EAAE,GAAG,wBAAY,MAAM;AAC3BD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFU,EAER,EAFQ,CAAX;AAIA,QAAME,GAAG,GAAG,wBAAY,MAAM;AAC5BF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFW,EAET,EAFS,CAAZ;AAIA,QAAMG,MAAM,GAAG,wBAAY,MAAM;AAC/BH,IAAAA,QAAQ,CAAEI,IAAD,IAAU,CAACA,IAAZ,CAAR;AACD,GAFc,EAEZ,EAFY,CAAf;AAIA,SAAO,CAACL,KAAD,EAAQ;AAAEE,IAAAA,EAAF;AAAMC,IAAAA,GAAN;AAAWC,IAAAA;AAAX,GAAR,CAAP;AACD,CAhBM","sourcesContent":["import { useCallback, useState } from 'react';\n\ntype InitialState = boolean | (() => boolean);\n\n/**\n * React hook to manage boolean (on - off) states\n *\n * @param initialState the initial boolean state value\n */\nexport const useBoolean = (initialState: InitialState = false) => {\n  const [value, setValue] = useState(initialState);\n\n  const on = useCallback(() => {\n    setValue(true);\n  }, []);\n\n  const off = useCallback(() => {\n    setValue(false);\n  }, []);\n\n  const toggle = useCallback(() => {\n    setValue((prev) => !prev);\n  }, []);\n\n  return [value, { on, off, toggle }] as const;\n};\n"]}