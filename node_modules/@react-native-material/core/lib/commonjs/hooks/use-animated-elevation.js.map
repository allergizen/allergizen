{"version":3,"sources":["use-animated-elevation.ts"],"names":["inputRange","Array","from","keys","useAnimatedElevation","elevation","animated","Animated","Value","Platform","OS","timing","toValue","duration","useNativeDriver","start","elevations","select","android","default","shadowColor","shadowOffset","width","interpolate","outputRange","Object","values","map","e","height","shadowOpacity","shadowRadius","web","boxShadow","transition"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,MAAMA,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,CAAnB;;AAEO,MAAMC,oBAAoB,GAAIC,SAAD,IAAgD;AAClF,QAAMC,QAAQ,GAAG,oBAAQ,MAAM,IAAIC,sBAASC,KAAb,CAAmBH,SAAnB,CAAd,EAA6C,EAA7C,CAAjB;AAEA,wBAAU,MAAM;AACd,QAAII,sBAASC,EAAT,KAAgB,KAApB,EAA2B;;AAC3BH,0BAASI,MAAT,CAAgBL,QAAhB,EAA0B;AACxBM,MAAAA,OAAO,EAAEP,SADe;AAExBQ,MAAAA,QAAQ,EAAE,GAFc;AAGxBC,MAAAA,eAAe,EAAE;AAHO,KAA1B,EAIGC,KAJH;AAKD,GAPD,EAOG,CAACV,SAAD,CAPH;AASA,QAAM;AAAEW,IAAAA;AAAF,MAAiB,6BAAvB;AAEA,SAAO,oBACL,MAAM,CACJP,sBAASQ,MAAT,CAAgB;AACdC,IAAAA,OAAO,EAAE;AAAEb,MAAAA,SAAS,EAAEC;AAAb,KADK;AAEda,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAEJ,UAAU,CAACX,SAAD,CAAV,CAAsBe,WAD5B;AAEPC,MAAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAEhB,QAAQ,CAACiB,WAAT,CAAqB;AAC1BvB,UAAAA,UAD0B;AAE1BwB,UAAAA,WAAW,EAAEC,MAAM,CAACC,MAAP,CAAcV,UAAd,EAA0BW,GAA1B,CAA+BC,CAAD;AAAA;;AAAA,+DAAOA,CAAC,CAACP,YAAT,oDAAO,gBAAgBC,KAAvB,yEAAgC,CAAhC;AAAA,WAA9B;AAFa,SAArB,CADK;AAKZO,QAAAA,MAAM,EAAEvB,QAAQ,CAACiB,WAAT,CAAqB;AAC3BvB,UAAAA,UAD2B;AAE3BwB,UAAAA,WAAW,EAAEC,MAAM,CAACC,MAAP,CAAcV,UAAd,EAA0BW,GAA1B,CAA+BC,CAAD;AAAA;;AAAA,gEAAOA,CAAC,CAACP,YAAT,qDAAO,iBAAgBQ,MAAvB,yEAAiC,CAAjC;AAAA,WAA9B;AAFc,SAArB;AALI,OAFP;AAYPC,MAAAA,aAAa,EAAExB,QAAQ,CAACiB,WAAT,CAAqB;AAClCvB,QAAAA,UADkC;AAElCwB,QAAAA,WAAW,EAAEC,MAAM,CAACC,MAAP,CAAcV,UAAd,EAA0BW,GAA1B,CAA+BC,CAAD;AAAA;;AAAA,qCAAOA,CAAC,CAACE,aAAT,+DAA0B,CAA1B;AAAA,SAA9B;AAFqB,OAArB,CAZR;AAgBPC,MAAAA,YAAY,EAAEzB,QAAQ,CAACiB,WAAT,CAAqB;AACjCvB,QAAAA,UADiC;AAEjCwB,QAAAA,WAAW,EAAEC,MAAM,CAACC,MAAP,CAAcV,UAAd,EAA0BW,GAA1B,CAA+BC,CAAD;AAAA;;AAAA,oCAAOA,CAAC,CAACG,YAAT,6DAAyB,CAAzB;AAAA,SAA9B;AAFoB,OAArB;AAhBP,KAFK;AAuBdC,IAAAA,GAAG,EAAE;AACHC,MAAAA,SAAS,EAAGjB,UAAU,CAACX,SAAD,CAAX,CAA+B4B,SADvC;AAEHC,MAAAA,UAAU,EACR;AAHC;AAvBS,GAAhB,CADI,EA8BJzB,sBAASQ,MAAT,CAAgB;AACdE,IAAAA,OAAO,EAAE,EADK;AAEda,IAAAA,GAAG,EAAE;AAFS,GAAhB,CA9BI,CADD,EAoCL,CAAC3B,SAAD,EAAYW,UAAZ,CApCK,CAAP;AAsCD,CApDM","sourcesContent":["import { useEffect, useMemo } from 'react';\nimport { Animated, Platform, StyleProp, ViewStyle } from 'react-native';\nimport { Elevation, useTheme } from '../base/ThemeContext';\n\nconst inputRange = Array.from(Array(25).keys());\n\nexport const useAnimatedElevation = (elevation: Elevation): StyleProp<ViewStyle> => {\n  const animated = useMemo(() => new Animated.Value(elevation), []);\n\n  useEffect(() => {\n    if (Platform.OS === 'web') return;\n    Animated.timing(animated, {\n      toValue: elevation,\n      duration: 200,\n      useNativeDriver: true,\n    }).start();\n  }, [elevation]);\n\n  const { elevations } = useTheme();\n\n  return useMemo(\n    () => [\n      Platform.select({\n        android: { elevation: animated },\n        default: {\n          shadowColor: elevations[elevation].shadowColor,\n          shadowOffset: {\n            width: animated.interpolate({\n              inputRange,\n              outputRange: Object.values(elevations).map((e) => e.shadowOffset?.width ?? 0),\n            }),\n            height: animated.interpolate({\n              inputRange,\n              outputRange: Object.values(elevations).map((e) => e.shadowOffset?.height ?? 0),\n            }),\n          },\n          shadowOpacity: animated.interpolate({\n            inputRange,\n            outputRange: Object.values(elevations).map((e) => e.shadowOpacity ?? 0),\n          }),\n          shadowRadius: animated.interpolate({\n            inputRange,\n            outputRange: Object.values(elevations).map((e) => e.shadowRadius ?? 0),\n          }),\n        },\n        web: {\n          boxShadow: (elevations[elevation] as any).boxShadow,\n          transition:\n            'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n        },\n      }),\n      Platform.select({\n        default: {},\n        web: {},\n      }),\n    ],\n    [elevation, elevations]\n  );\n};\n"]}