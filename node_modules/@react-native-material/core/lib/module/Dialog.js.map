{"version":3,"sources":["Dialog.tsx"],"names":["React","useEffect","useMemo","useState","Animated","Easing","Platform","StyleSheet","TouchableWithoutFeedback","Portal","Surface","Dialog","visible","onDismiss","children","portalVisible","setPortalVisible","animatedValue","Value","timing","toValue","duration","easing","out","cubic","useNativeDriver","OS","start","absoluteFill","styles","backdrop","opacity","container","surface","create","backgroundColor","justifyContent","alignItems","width","marginHorizontal"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,wBAAjD,QAAiF,cAAjF;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAQA,MAAMC,MAA6B,GAAG,QAA8C;AAAA,MAA7C;AAAEC,IAAAA,OAAO,GAAG,KAAZ;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA;AAA9B,GAA6C;AAClF,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAACS,OAAD,CAAlD;AAEA,QAAMK,aAAa,GAAGf,OAAO,CAAC,MAAM,IAAIE,QAAQ,CAACc,KAAb,CAAmBN,OAAO,GAAG,CAAH,GAAO,CAAjC,CAAP,EAA4C,EAA5C,CAA7B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,OAAJ,EAAaI,gBAAgB,CAAC,IAAD,CAAhB;AAEbZ,IAAAA,QAAQ,CAACe,MAAT,CAAgBF,aAAhB,EAA+B;AAC7BG,MAAAA,OAAO,EAAER,OAAO,GAAG,CAAH,GAAO,CADM;AAE7BS,MAAAA,QAAQ,EAAE,GAFmB;AAG7BC,MAAAA,MAAM,EAAEjB,MAAM,CAACkB,GAAP,CAAWlB,MAAM,CAACmB,KAAlB,CAHqB;AAI7BC,MAAAA,eAAe,EAAEnB,QAAQ,CAACoB,EAAT,KAAgB;AAJJ,KAA/B,EAKGC,KALH,CAKS,MAAM;AACb,UAAI,CAACf,OAAL,EAAcI,gBAAgB,CAAC,KAAD,CAAhB;AACf,KAPD;AAQD,GAXQ,EAWN,CAACJ,OAAD,CAXM,CAAT;AAaA,MAAI,CAACG,aAAL,EAAoB,OAAO,IAAP;AAEpB,sBACE,oBAAC,MAAD,qBACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEF;AAAnC,kBACE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACN,UAAU,CAACqB,YAAZ,EAA0BC,MAAM,CAACC,QAAjC,EAA2C;AAAEC,MAAAA,OAAO,EAAEd;AAAX,KAA3C;AAAtB,IADF,CADF,eAIE,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CAACV,UAAU,CAACqB,YAAZ,EAA0BC,MAAM,CAACG,SAAjC,EAA4C;AAAED,MAAAA,OAAO,EAAEd;AAAX,KAA5C,CADT;AAEE,IAAA,aAAa,EAAC,UAFhB;AAGE,IAAA,8BAA8B,EAAEX,QAAQ,CAACoB,EAAT,KAAgB;AAHlD,kBAKE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAE,EAAtC;AAA0C,IAAA,KAAK,EAAE,CAACG,MAAM,CAACI,OAAR;AAAjD,KACGnB,QADH,CALF,CAJF,CADF;AAgBD,CApCD;;AAsCA,MAAMe,MAAM,GAAGtB,UAAU,CAAC2B,MAAX,CAAkB;AAC/BJ,EAAAA,QAAQ,EAAE;AACRK,IAAAA,eAAe,EAAE;AADT,GADqB;AAI/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,cAAc,EAAE,QADP;AAETC,IAAAA,UAAU,EAAE;AAFH,GAJoB;AAQ/BJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,gBAAgB,EAAE;AAFX;AARsB,CAAlB,CAAf;AAcA,eAAe5B,MAAf","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Animated, Easing, Platform, StyleSheet, TouchableWithoutFeedback } from 'react-native';\nimport { Portal } from './base/PortalContext';\nimport Surface from './Surface';\n\nexport interface DialogProps {\n  visible?: boolean;\n\n  onDismiss?: () => void;\n}\n\nconst Dialog: React.FC<DialogProps> = ({ visible = false, onDismiss, children }) => {\n  const [portalVisible, setPortalVisible] = useState(visible);\n\n  const animatedValue = useMemo(() => new Animated.Value(visible ? 1 : 0), []);\n\n  useEffect(() => {\n    if (visible) setPortalVisible(true);\n\n    Animated.timing(animatedValue, {\n      toValue: visible ? 1 : 0,\n      duration: 225,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: Platform.OS !== 'android',\n    }).start(() => {\n      if (!visible) setPortalVisible(false);\n    });\n  }, [visible]);\n\n  if (!portalVisible) return null;\n\n  return (\n    <Portal>\n      <TouchableWithoutFeedback onPress={onDismiss}>\n        <Animated.View style={[StyleSheet.absoluteFill, styles.backdrop, { opacity: animatedValue }]} />\n      </TouchableWithoutFeedback>\n      <Animated.View\n        style={[StyleSheet.absoluteFill, styles.container, { opacity: animatedValue }]}\n        pointerEvents=\"box-none\"\n        needsOffscreenAlphaCompositing={Platform.OS === 'android'}\n      >\n        <Surface category=\"medium\" elevation={24} style={[styles.surface]}>\n          {children}\n        </Surface>\n      </Animated.View>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0,0,0,.5)',\n  },\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  surface: {\n    width: 280,\n    marginHorizontal: 40,\n  },\n});\n\nexport default Dialog;\n"]}