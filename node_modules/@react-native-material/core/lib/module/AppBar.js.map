{"version":3,"sources":["AppBar.tsx"],"names":["React","Platform","StyleSheet","View","Surface","Text","useSurfaceColorValue","usePaletteColor","useTheme","AppBar","variant","title","subtitle","centerTitle","leading","trailing","color","tintColor","transparent","enableColorOnDark","style","contentContainerStyle","titleContentStyle","titleStyle","subtitleStyle","leadingContainerStyle","trailingContainerStyle","children","props","theme","surfaceColor","palette","colorScheme","titleElement","on","subtitleElement","leadingElement","size","trailingElement","backgroundColor","main","zIndex","styles","contentContainer","leadingContainer","absoluteFill","centeredTitleContainer","titleContainer","undefined","trailingContainer","create","flexDirection","justifyContent","alignItems","height","select","ios","web","default","paddingHorizontal","marginStart","marginEnd","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Platform, StyleProp, StyleSheet, TextStyle, View, ViewStyle } from 'react-native';\nimport Surface, { SurfaceProps } from './Surface';\nimport Text from './Text';\nimport { useSurfaceColorValue } from './hooks/use-surface-color';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface AppBarProps extends SurfaceProps {\n  /**\n   * Whether you want to place the AppBar at the top or the bottom of the screen.\n   *\n   * @default \"top\"\n   */\n  variant?: 'top' | 'bottom';\n\n  /**\n   * The primary text to display in the AppBar.\n   */\n  title?: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * The secondary text to display in the AppBar.\n   */\n  subtitle?: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * Whether the `title` and `subtitle` should be centered.\n   *\n   * @default false\n   */\n  centerTitle?: boolean;\n\n  /**\n   * The element displayed before the `title`.\n   */\n  leading?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The element displayed after the `title`.\n   */\n  trailing?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The fill color of the AppBar's background.\n   *\n   * @default \"primary\"\n   */\n  color?: Color;\n\n  /**\n   * The color of the AppBar's content (title, subtitle, icons, etc.).\n   */\n  tintColor?: Color;\n\n  /**\n   * Whether the AppBar's background is transparent.\n   *\n   * @default false\n   */\n  transparent?: boolean;\n\n  /**\n   * If `true`, the `color` prop will be applied in dark mode.\n   *\n   * @default false\n   */\n  enableColorOnDark?: boolean;\n\n  /**\n   * The style of the content container view.\n   */\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the title and subtitle container view.\n   */\n  titleContentStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the title text.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The style of the subtitle text.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The style of the leading element container view.\n   */\n  leadingContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the trailing element container view.\n   */\n  trailingContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst AppBar: React.FC<AppBarProps> = ({\n  variant = 'top',\n  title,\n  subtitle,\n  centerTitle = false,\n  leading,\n  trailing,\n  color = 'primary',\n  tintColor,\n  transparent = false,\n  enableColorOnDark = false,\n  style,\n  contentContainerStyle,\n  titleContentStyle,\n  titleStyle,\n  subtitleStyle,\n  leadingContainerStyle,\n  trailingContainerStyle,\n  children,\n  ...props\n}) => {\n  const theme = useTheme();\n\n  const surfaceColor = useSurfaceColorValue(variant === 'top' ? 4 : 8);\n\n  const palette = usePaletteColor(theme.colorScheme === 'dark' && !enableColorOnDark ? surfaceColor : color, tintColor);\n\n  const titleElement =\n    typeof title === 'string' ? (\n      <Text variant=\"h6\" style={[{ color: palette.on }, titleStyle]}>\n        {title}\n      </Text>\n    ) : typeof title === 'function' ? (\n      title({ color: palette.on })\n    ) : (\n      title\n    );\n\n  const subtitleElement =\n    typeof subtitle === 'string' ? (\n      <Text variant=\"caption\" style={[{ color: palette.on }, subtitleStyle]}>\n        {subtitle}\n      </Text>\n    ) : typeof subtitle === 'function' ? (\n      subtitle({ color: palette.on })\n    ) : (\n      subtitle\n    );\n\n  const leadingElement = typeof leading === 'function' ? leading({ color: palette.on, size: 24 }) : leading;\n\n  const trailingElement = typeof trailing === 'function' ? trailing({ color: palette.on, size: 24 }) : trailing;\n\n  return (\n    <Surface\n      style={[\n        {\n          backgroundColor: transparent ? 'transparent' : palette.main,\n          zIndex: variant === 'top' ? 4 : 8,\n        },\n        style,\n      ]}\n      elevation={transparent ? 0 : variant === 'top' ? 4 : 8}\n      {...props}\n    >\n      <View style={[styles.contentContainer, contentContainerStyle]}>\n        {leadingElement && <View style={[styles.leadingContainer, leadingContainerStyle]}>{leadingElement}</View>}\n        <View\n          style={[\n            centerTitle ? [StyleSheet.absoluteFill, styles.centeredTitleContainer] : styles.titleContainer,\n            titleContentStyle,\n          ]}\n          pointerEvents={centerTitle ? 'none' : undefined}\n        >\n          {titleElement}\n          {subtitleElement}\n        </View>\n        {trailingElement && <View style={[styles.trailingContainer, trailingContainerStyle]}>{trailingElement}</View>}\n      </View>\n      {children}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: Platform.select({ ios: 44, web: 64, default: 56 }),\n    paddingHorizontal: 16,\n  },\n  leadingContainer: {\n    marginStart: -12,\n    marginEnd: 20,\n  },\n  trailingContainer: {\n    marginStart: 20,\n    marginEnd: -12,\n  },\n  titleContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  centeredTitleContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default AppBar;\n"]}