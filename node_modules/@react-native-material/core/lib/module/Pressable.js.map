{"version":3,"sources":["Pressable.tsx"],"names":["React","useCallback","useState","Animated","Easing","Platform","Pressable","RNPressable","StyleSheet","View","chroma","usePaletteColor","pressEffect","select","android","web","default","pressEffectColor","onLayout","onPressIn","onPressOut","onFocus","onBlur","android_ripple","onMouseEnter","onMouseLeave","children","rest","main","color","size","setSize","width","height","ripples","setRipples","handleLayout","event","nativeEvent","layout","pressed","setPressed","handlePressIn","locationX","locationY","x","y","scale","Value","opacity","ripple","key","Date","now","Math","random","style","start","top","transform","prevState","timing","toValue","max","abs","easing","out","ease","duration","useNativeDriver","handlePressOut","length","slice","focused","setFocused","handleFocus","handleBlur","hovered","setHovered","handleMouseEnter","handleMouseLeave","alpha","hex","undefined","absoluteFill","backgroundColor","disabled","transition","styles","effectContainer","map","create","overflow","position","borderRadius"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  NativeSyntheticEvent,\n  Platform,\n  Pressable as RNPressable,\n  PressableProps as RNPressableProps,\n  StyleSheet,\n  TargetedEvent,\n  View,\n} from 'react-native';\nimport chroma from 'chroma-js';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\n\nexport interface PressableProps extends RNPressableProps {\n  pressEffect?: 'none' | 'highlight' | 'ripple' | 'android-ripple';\n\n  pressEffectColor?: Color;\n\n  onMouseEnter?: (event: NativeSyntheticEvent<TargetedEvent>) => void;\n\n  onMouseLeave?: (event: NativeSyntheticEvent<TargetedEvent>) => void;\n\n  style?: any;\n}\n\nconst Pressable: React.FC<PressableProps> = ({\n  pressEffect = Platform.select({ android: 'android-ripple', web: 'ripple', default: 'highlight' }),\n  pressEffectColor = 'on-background',\n  onLayout,\n  onPressIn,\n  onPressOut,\n  onFocus,\n  onBlur,\n  android_ripple,\n  onMouseEnter,\n  onMouseLeave,\n  children,\n  ...rest\n}) => {\n  const { main: color } = usePaletteColor(pressEffectColor);\n\n  const [size, setSize] = useState({ width: 0, height: 0 });\n\n  const [ripples, setRipples] = useState<{ key: string; style: any }[]>([]);\n\n  const handleLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      const { width, height } = event.nativeEvent.layout;\n      setSize({ width, height });\n      onLayout?.(event);\n    },\n    [onLayout]\n  );\n\n  const [pressed, setPressed] = useState(false);\n\n  const handlePressIn = useCallback(\n    (event: GestureResponderEvent) => {\n      setPressed(true);\n      onPressIn?.(event);\n\n      if (pressEffect === 'ripple') {\n        const { locationX, locationY } = event.nativeEvent;\n\n        const x = (locationX ?? size.width / 2) - 0.5;\n        const y = (locationY ?? size.height / 2) - 0.5;\n\n        const scale = new Animated.Value(0);\n        const opacity = new Animated.Value(1);\n\n        const ripple = {\n          key: `${Date.now() + Math.random()}`,\n          style: { start: x, top: y, transform: [{ scale }], opacity },\n        };\n\n        setRipples((prevState) => [...prevState, ripple]);\n\n        Animated.timing(scale, {\n          toValue: Math.max(\n            size.width * 1.25 + Math.abs(size.width / 2 - x) * 2,\n            size.height * 1.25 + Math.abs(size.height / 2 - y) * 2\n          ),\n          easing: Easing.out(Easing.ease),\n          duration: 400,\n          useNativeDriver: false,\n        }).start();\n      }\n    },\n    [onPressIn, pressEffect, size]\n  );\n\n  const handlePressOut = useCallback(\n    (event: GestureResponderEvent) => {\n      setPressed(false);\n      onPressOut?.(event);\n\n      if (pressEffect === 'ripple') {\n        Animated.timing(ripples[ripples.length - 1].style.opacity, {\n          toValue: 0,\n          easing: Easing.out(Easing.ease),\n          duration: 400,\n          useNativeDriver: false,\n        }).start(() => {\n          setRipples((prevState) => prevState.slice(1));\n        });\n      }\n    },\n    [pressEffect, ripples, onPressOut]\n  );\n\n  const [focused, setFocused] = useState(false);\n\n  const handleFocus = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setFocused(true);\n      onFocus?.(event);\n    },\n    [onFocus]\n  );\n\n  const handleBlur = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setFocused(false);\n      onBlur?.(event);\n    },\n    [onBlur]\n  );\n\n  const [hovered, setHovered] = useState(false);\n\n  const handleMouseEnter = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setHovered(true);\n      onMouseEnter?.(event);\n    },\n    [onMouseEnter]\n  );\n\n  const handleMouseLeave = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setHovered(false);\n      onMouseLeave?.(event);\n    },\n    [onMouseLeave]\n  );\n\n  return (\n    <RNPressable\n      android_ripple={\n        pressEffect === 'android-ripple' ? android_ripple ?? { color: chroma(color).alpha(0.26).hex() } : undefined\n      }\n      onLayout={handleLayout}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      {...({ onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave } as any)}\n      {...rest}\n    >\n      <View\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            backgroundColor: hovered && !rest.disabled ? chroma(color).alpha(0.04).hex() : 'transparent',\n          },\n          { transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms' } as any,\n        ]}\n      />\n\n      {focused && !rest.disabled && (\n        <View style={[StyleSheet.absoluteFill, { backgroundColor: chroma(color).alpha(0.12).hex() }]} />\n      )}\n\n      {pressEffect === 'highlight' && pressed && (\n        <View style={[StyleSheet.absoluteFill, { backgroundColor: chroma(color).alpha(0.26).hex() }]} />\n      )}\n\n      {pressEffect === 'ripple' && ripples.length !== 0 && (\n        <View style={[StyleSheet.absoluteFill, styles.effectContainer]}>\n          {ripples.map((ripple) => (\n            <Animated.View\n              key={ripple.key}\n              style={[styles.ripple, { backgroundColor: chroma(color).alpha(0.1).hex() }, ripple.style]}\n            />\n          ))}\n        </View>\n      )}\n\n      {children}\n    </RNPressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  effectContainer: {\n    overflow: 'hidden',\n  },\n  ripple: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    borderRadius: 0.5,\n  },\n});\n\nexport default Pressable;\n"]}