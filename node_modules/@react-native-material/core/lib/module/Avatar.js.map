{"version":3,"sources":["Avatar.tsx"],"names":["React","Image","StyleSheet","View","Text","usePaletteColor","useStyles","Avatar","label","image","icon","size","color","tintColor","initials","uppercase","autoColor","style","contentContainerStyle","imageContainerStyle","labelStyle","imageStyle","palette","getColor","styles","container","width","height","backgroundColor","main","borderRadius","contentContainer","absoluteFillObject","justifyContent","alignItems","fontSize","on","textTransform","getLabel","getInitials","getImage","isValidElement","getIcon","hash","i","length","charCodeAt","value","toString","substr","namesArray","trim","split","charAt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Image,\n  ImageSourcePropType,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Text from './Text';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface AvatarProps {\n  label?: string | React.ReactElement | ((props: { color: string }) => React.ReactElement | null) | null;\n\n  image?: ImageSourcePropType | React.ReactElement | ((props: { size: number }) => React.ReactElement | null) | null;\n\n  icon?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n\n  size?: number;\n\n  color?: Color;\n\n  tintColor?: Color;\n\n  initials?: boolean;\n\n  uppercase?: boolean;\n\n  autoColor?: boolean;\n\n  style?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  imageContainerStyle?: StyleProp<ViewStyle>;\n\n  labelStyle?: StyleProp<TextStyle>;\n\n  imageStyle?: StyleProp<ImageStyle>;\n}\n\nconst Avatar: React.FC<AvatarProps> = ({\n  label,\n  image,\n  icon,\n  size = 56,\n  color = 'secondary',\n  tintColor,\n  initials = true,\n  uppercase = true,\n  autoColor = false,\n  style,\n  contentContainerStyle,\n  imageContainerStyle,\n  labelStyle,\n  imageStyle,\n}) => {\n  const palette = usePaletteColor(autoColor ? getColor(typeof label === 'string' ? label : '') : color, tintColor);\n\n  const styles = useStyles(\n    () => ({\n      container: {\n        width: size,\n        height: size,\n        backgroundColor: palette.main,\n        borderRadius: size / 2,\n      },\n      contentContainer: {\n        ...StyleSheet.absoluteFillObject,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      label: {\n        fontSize: size / 2,\n        color: palette.on,\n        textTransform: uppercase ? 'uppercase' : 'none',\n      },\n      image: {\n        width: size,\n        height: size,\n        borderRadius: size / 2,\n      },\n    }),\n    [size, uppercase, palette]\n  );\n\n  const getLabel = () => {\n    switch (typeof label) {\n      case 'string':\n        return (\n          <Text variant=\"h6\" style={[styles.label, labelStyle]}>\n            {initials ? getInitials(label) : label}\n          </Text>\n        );\n      case 'function':\n        return label({ color: palette.on });\n      default:\n        return label;\n    }\n  };\n\n  const getImage = () => {\n    if (!image || React.isValidElement(image)) return image;\n    if (typeof image === 'function') return image({ size });\n    return <Image source={image} style={[styles.image, imageStyle]} />;\n  };\n\n  const getIcon = () => {\n    if (typeof icon === 'function') return icon({ color: palette.on, size: size / 2 });\n    return icon;\n  };\n\n  return (\n    <View style={[styles.container, style]}>\n      {(label || icon) && (\n        <View style={[styles.contentContainer, contentContainerStyle]}>{label ? getLabel() : icon && getIcon()}</View>\n      )}\n      {image && <View style={[StyleSheet.absoluteFillObject, imageContainerStyle]}>{getImage()}</View>}\n    </View>\n  );\n};\n\nfunction getColor(label: string) {\n  let hash = 0;\n  let i;\n  for (i = 0; i < label.length; i += 1) {\n    hash = label.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let color = '#';\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  return color;\n}\n\nfunction getInitials(label: string) {\n  const namesArray = label.trim().split(' ');\n  if (namesArray.length === 1) return `${namesArray[0].charAt(0)}`;\n  else return `${namesArray[0].charAt(0)}${namesArray[namesArray.length - 1].charAt(0)}`;\n}\n\nexport default Avatar;\n"]}