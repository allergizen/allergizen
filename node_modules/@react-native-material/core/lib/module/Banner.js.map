{"version":3,"sources":["Banner.tsx"],"names":["React","View","Text","Divider","useStyles","Banner","text","illustration","buttons","style","contentContainerStyle","illustrationContainerStyle","textContainerStyle","textStyle","actionsContainerStyle","styles","palette","container","backgroundColor","surface","main","contentContainer","flexDirection","marginTop","marginBottom","marginHorizontal","illustrationContainer","marginEnd","textContainer","flex","color","on","actionsContainer","justifyContent","alignItems","margin","size","Array","isArray","map","button","index","length","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleProp, TextStyle, View, ViewStyle } from 'react-native';\nimport Text from './Text';\nimport Divider from './Divider';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface BannerProps {\n  text: string | React.ReactElement | null;\n\n  illustration?: React.ReactElement | ((props: { size: number }) => React.ReactElement | null) | null;\n\n  buttons: React.ReactElement | React.ReactElement[] | null;\n\n  style?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  illustrationContainerStyle?: StyleProp<ViewStyle>;\n\n  textContainerStyle?: StyleProp<ViewStyle>;\n\n  textStyle?: StyleProp<TextStyle>;\n\n  actionsContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst Banner: React.FC<BannerProps> = ({\n  text,\n  illustration,\n  buttons,\n  style,\n  contentContainerStyle,\n  illustrationContainerStyle,\n  textContainerStyle,\n  textStyle,\n  actionsContainerStyle,\n}) => {\n  const styles = useStyles(\n    ({ palette }) => ({\n      container: {\n        backgroundColor: palette.surface.main,\n      },\n      contentContainer: {\n        flexDirection: 'row',\n        marginTop: 24,\n        marginBottom: 4,\n        marginHorizontal: 16,\n      },\n      illustrationContainer: {\n        marginEnd: 16,\n      },\n      textContainer: {\n        flex: 1,\n      },\n      text: {\n        color: palette.surface.on,\n      },\n      actionsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        margin: 8,\n      },\n    }),\n    []\n  );\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={[styles.contentContainer, contentContainerStyle]}>\n        {illustration && (\n          <View style={[styles.illustrationContainer, illustrationContainerStyle]}>\n            {typeof illustration === 'function' ? illustration({ size: 40 }) : illustration}\n          </View>\n        )}\n        <View style={[styles.textContainer, textContainerStyle]}>\n          {typeof text === 'string' ? (\n            <Text variant=\"body2\" style={[styles.text, textStyle]}>\n              {text}\n            </Text>\n          ) : (\n            text\n          )}\n        </View>\n      </View>\n      <View style={[styles.actionsContainer, actionsContainerStyle]}>\n        {Array.isArray(buttons)\n          ? buttons.map((button, index) => (\n              <React.Fragment key={index}>\n                {button}\n                {index !== buttons.length - 1 && <View style={{ width: 8 }} />}\n              </React.Fragment>\n            ))\n          : buttons}\n      </View>\n      <Divider />\n    </View>\n  );\n};\n\nexport default Banner;\n"]}