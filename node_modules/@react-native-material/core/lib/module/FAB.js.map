{"version":3,"sources":["FAB.tsx"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","Animated","StyleSheet","View","Surface","Pressable","Text","ActivityIndicator","usePaletteColor","useStyles","useAnimatedElevation","FAB","icon","label","variant","size","color","tintColor","loading","loadingIndicator","loadingIndicatorPosition","visible","style","pressableContainerStyle","contentContainerStyle","iconContainerStyle","labelContainerStyle","labelStyle","loadingOverlayContainerStyle","pressEffect","pressEffectColor","onPress","onPressIn","onPressOut","onLongPress","onBlur","onFocus","onMouseEnter","onMouseLeave","delayLongPress","disabled","hitSlop","pressRetentionOffset","android_disableSound","android_ripple","testOnly_pressed","rest","palette","hasIcon","styles","container","backgroundColor","main","borderRadius","pressableContainer","overflow","pressable","flexDirection","alignItems","paddingStart","paddingEnd","paddingVertical","iconContainer","justifyContent","width","height","labelContainer","marginStart","loadingOverlayContainer","absoluteFillObject","animated","Value","current","timing","toValue","duration","useNativeDriver","start","getLoadingIndicator","on","getIcon","getLabel","pressed","setPressed","handlePressIn","event","handlePressOut","animatedElevation","transform","scale"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Animated, GestureResponderEvent, StyleProp, StyleSheet, TextStyle, View, ViewStyle } from 'react-native';\nimport Surface, { SurfaceProps } from './Surface';\nimport Pressable, { PressableProps } from './Pressable';\nimport Text from './Text';\nimport ActivityIndicator from './ActivityIndicator';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useStyles } from './hooks/use-styles';\nimport { useAnimatedElevation } from './hooks/use-animated-elevation';\n\nexport interface FABProps extends Omit<SurfaceProps, 'hitSlop'>, Omit<PressableProps, 'style' | 'children'> {\n  icon?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n\n  label?: string | React.ReactElement | ((props: { color: string }) => React.ReactElement | null) | null;\n\n  variant?: 'standard' | 'extended';\n\n  size?: 'default' | 'mini';\n\n  color?: Color;\n\n  tintColor?: Color;\n\n  loading?: boolean;\n\n  loadingIndicator?: string | React.ReactElement | ((props: { color: string }) => React.ReactElement | null) | null;\n\n  loadingIndicatorPosition?: 'icon' | 'overlay';\n\n  visible?: boolean;\n\n  pressableContainerStyle?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: PressableProps['style'];\n\n  iconContainerStyle?: StyleProp<ViewStyle>;\n\n  labelContainerStyle?: StyleProp<ViewStyle>;\n\n  labelStyle?: StyleProp<TextStyle>;\n\n  loadingOverlayContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst FAB: React.FC<FABProps> = ({\n  icon,\n  label,\n  variant = 'standard',\n  size = 'default',\n  color = 'secondary',\n  tintColor,\n  loading = false,\n  loadingIndicator,\n  loadingIndicatorPosition = 'icon',\n  visible = true,\n  style,\n  pressableContainerStyle,\n  contentContainerStyle,\n  iconContainerStyle,\n  labelContainerStyle,\n  labelStyle,\n  loadingOverlayContainerStyle,\n\n  pressEffect,\n  pressEffectColor,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  onBlur,\n  onFocus,\n  onMouseEnter,\n  onMouseLeave,\n  delayLongPress,\n  disabled,\n  hitSlop,\n  pressRetentionOffset,\n  android_disableSound,\n  android_ripple,\n  testOnly_pressed,\n  ...rest\n}) => {\n  const palette = usePaletteColor(color, tintColor);\n\n  const hasIcon = useMemo(\n    () => icon || (loading && loadingIndicatorPosition === 'icon'),\n    [icon, loading, loadingIndicatorPosition]\n  );\n\n  const styles = useStyles(\n    () => ({\n      container: {\n        backgroundColor: palette.main,\n        borderRadius: size === 'default' ? 28 : 20,\n      },\n      pressableContainer: {\n        borderRadius: size === 'default' ? 28 : 20,\n        overflow: 'hidden',\n      },\n      pressable: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingStart:\n          variant === 'extended'\n            ? hasIcon\n              ? size === 'default'\n                ? 12\n                : 6\n              : size === 'default'\n              ? 20\n              : 10\n            : size === 'default'\n            ? 16\n            : 8,\n        paddingEnd: variant === 'extended' ? (size === 'default' ? 20 : 10) : size === 'default' ? 16 : 8,\n        paddingVertical: size === 'default' ? 16 : 8,\n      },\n      iconContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 24,\n        height: 24,\n      },\n      labelContainer: {\n        marginStart: hasIcon ? (size === 'default' ? 12 : 6) : 0,\n      },\n      loadingOverlayContainer: {\n        ...StyleSheet.absoluteFillObject,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: palette.main,\n      },\n    }),\n    [variant, size, palette, hasIcon]\n  );\n\n  const animated = useRef(new Animated.Value(visible ? 1 : 0)).current;\n\n  useEffect(() => {\n    Animated.timing(animated, {\n      toValue: visible ? 1 : 0,\n      duration: 200,\n      useNativeDriver: false,\n    }).start();\n  }, [visible]);\n\n  const getLoadingIndicator = () => {\n    if (!loadingIndicator) return <ActivityIndicator color={palette.on} />;\n    switch (typeof loadingIndicator) {\n      case 'string':\n        return (\n          <Text variant=\"button\" style={{ color: palette.on }}>\n            {loadingIndicator}\n          </Text>\n        );\n      case 'function':\n        return loadingIndicator({ color: palette.on });\n      default:\n        return loadingIndicator;\n    }\n  };\n\n  const getIcon = () => {\n    if (loading && loadingIndicatorPosition === 'icon') return getLoadingIndicator();\n    return typeof icon === 'function' ? icon({ color: palette.on, size: 24 }) : icon;\n  };\n\n  const getLabel = () => {\n    switch (typeof label) {\n      case 'string':\n        return (\n          <Text variant=\"button\" selectable={false} style={[{ color: palette.on }, labelStyle]}>\n            {label}\n          </Text>\n        );\n      case 'function':\n        return label({ color: palette.on });\n      default:\n        return label;\n    }\n  };\n\n  const [pressed, setPressed] = useState(false);\n\n  const handlePressIn = useCallback(\n    (event: GestureResponderEvent) => {\n      onPressIn?.(event);\n      setPressed(true);\n    },\n    [onPressIn]\n  );\n\n  const handlePressOut = useCallback(\n    (event: GestureResponderEvent) => {\n      onPressOut?.(event);\n      setPressed(false);\n    },\n    [onPressOut]\n  );\n\n  const animatedElevation = useAnimatedElevation(pressed ? 12 : 6);\n\n  return (\n    <Surface style={[animatedElevation, styles.container, { transform: [{ scale: animated }] }, style]} {...rest}>\n      <View style={[styles.pressableContainer, pressableContainerStyle]}>\n        <Pressable\n          style={[styles.pressable, contentContainerStyle]}\n          pressEffect={pressEffect}\n          pressEffectColor={pressEffectColor ?? palette.on}\n          onPress={onPress}\n          onPressIn={handlePressIn}\n          onPressOut={handlePressOut}\n          onLongPress={onLongPress}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          delayLongPress={delayLongPress}\n          disabled={disabled}\n          hitSlop={hitSlop}\n          pressRetentionOffset={pressRetentionOffset}\n          android_disableSound={android_disableSound}\n          android_ripple={android_ripple}\n          testOnly_pressed={testOnly_pressed}\n        >\n          {hasIcon && <View style={[styles.iconContainer, iconContainerStyle]}>{getIcon()}</View>}\n          {variant === 'extended' && <View style={[styles.labelContainer, labelContainerStyle]}>{getLabel()}</View>}\n\n          {loading && loadingIndicatorPosition === 'overlay' && (\n            <View style={[styles.loadingOverlayContainer, loadingOverlayContainerStyle]}>{getLoadingIndicator()}</View>\n          )}\n        </Pressable>\n      </View>\n    </Surface>\n  );\n};\n\nexport default FAB;\n"]}