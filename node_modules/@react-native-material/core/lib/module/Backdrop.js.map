{"version":3,"sources":["Backdrop.tsx"],"names":["React","useEffect","useRef","useState","Animated","useWindowDimensions","View","Surface","useStyles","Backdrop","revealed","header","headerHeight","backLayer","backLayerHeight","subheader","subheaderHeight","style","headerContainerStyle","backLayerContainerStyle","frontLayerContainerStyle","subheaderContainerStyle","children","currentHeaderHeight","setCurrentHeaderHeight","currentBackLayerHeight","setCurrentBackLayerHeight","currentSubheaderHeight","setCurrentSubheaderHeight","styles","palette","container","flex","backgroundColor","primary","main","overflow","frontLayer","position","start","end","bottom","surface","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","elevation","animated","Value","current","timing","toValue","duration","useNativeDriver","dimensions","translateY","interpolate","inputRange","outputRange","height","e","nativeEvent","layout","top","transform"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Animated, StyleProp, useWindowDimensions, View, ViewProps, ViewStyle } from 'react-native';\nimport Surface from './Surface';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface BackdropProps {\n  revealed?: boolean;\n\n  header?: React.ReactElement | null;\n\n  headerHeight?: number;\n\n  backLayer?: React.ReactElement | null;\n\n  backLayerHeight?: number;\n\n  subheader?: React.ReactElement | null;\n\n  subheaderHeight?: number;\n\n  style?: StyleProp<ViewStyle>;\n\n  headerContainerStyle?: StyleProp<ViewStyle>;\n\n  backLayerContainerStyle?: StyleProp<ViewStyle>;\n\n  frontLayerContainerStyle?: Animated.AnimatedProps<ViewProps>['style'];\n\n  subheaderContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst Backdrop: React.FC<BackdropProps> = ({\n  revealed = false,\n  header,\n  headerHeight,\n  backLayer,\n  backLayerHeight,\n  subheader,\n  subheaderHeight,\n  style,\n  headerContainerStyle,\n  backLayerContainerStyle,\n  frontLayerContainerStyle,\n  subheaderContainerStyle,\n  children,\n}) => {\n  const [currentHeaderHeight, setCurrentHeaderHeight] = useState(headerHeight ?? 0);\n  const [currentBackLayerHeight, setCurrentBackLayerHeight] = useState(backLayerHeight ?? 0);\n  const [currentSubheaderHeight, setCurrentSubheaderHeight] = useState(subheaderHeight ?? 0);\n\n  const styles = useStyles(({ palette }) => ({\n    container: {\n      flex: 1,\n      backgroundColor: palette.primary.main,\n      overflow: 'hidden',\n    },\n    frontLayer: {\n      position: 'absolute',\n      start: 0,\n      end: 0,\n      bottom: 0,\n      backgroundColor: palette.surface.main,\n      borderTopStartRadius: 16,\n      borderTopEndRadius: 16,\n      borderBottomStartRadius: 0,\n      borderBottomEndRadius: 0,\n      elevation: 1,\n    },\n  }));\n\n  const animated = useRef(new Animated.Value(revealed ? 1 : 0)).current;\n\n  useEffect(() => {\n    Animated.timing(animated, {\n      toValue: revealed ? 1 : 0,\n      duration: 300,\n      useNativeDriver: true,\n    }).start();\n  }, [revealed]);\n\n  const dimensions = useWindowDimensions();\n\n  const translateY = animated.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\n      0,\n      dimensions.height < currentHeaderHeight + currentBackLayerHeight\n        ? dimensions.height - currentHeaderHeight - currentSubheaderHeight\n        : currentBackLayerHeight,\n    ],\n  });\n\n  return (\n    <View style={[styles.container, style]}>\n      <View\n        style={[headerContainerStyle, { height: headerHeight }]}\n        onLayout={(e) => {\n          if (!headerHeight) setCurrentHeaderHeight(e.nativeEvent.layout.height);\n        }}\n      >\n        {header}\n      </View>\n\n      <View\n        style={[backLayerContainerStyle, { height: backLayerHeight }]}\n        onLayout={(e) => {\n          if (!backLayerHeight) setCurrentBackLayerHeight(e.nativeEvent.layout.height);\n        }}\n      >\n        {backLayer}\n      </View>\n\n      <Surface\n        style={[styles.frontLayer, { top: currentHeaderHeight, transform: [{ translateY }] }, frontLayerContainerStyle]}\n      >\n        {subheader && (\n          <View\n            style={[subheaderContainerStyle, { height: subheaderHeight }]}\n            onLayout={(e) => {\n              if (!subheaderHeight) setCurrentSubheaderHeight(e.nativeEvent.layout.height);\n            }}\n          >\n            {subheader}\n          </View>\n        )}\n\n        {children}\n      </Surface>\n    </View>\n  );\n};\n\nexport default Backdrop;\n"]}