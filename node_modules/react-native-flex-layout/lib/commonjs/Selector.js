"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.select = exports.odd = exports.notLastChild = exports.notFirstChild = exports.lastChild = exports.firstChild = exports.even = exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _utilities = require("./utilities");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const Selector = _ref => {
  let {
    childrenStyle,
    children
  } = _ref;
  const styles = (0, _react.useMemo)(() => Array.isArray(childrenStyle) ? childrenStyle.flat(Infinity) : [childrenStyle], [childrenStyle]);
  const validChildren = (0, _utilities.getValidChildren)(children);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, validChildren.map((child, index) => /*#__PURE__*/_react.default.cloneElement(child, {
    style: [child.props.style, styles.map(style => typeof style === 'function' ? style(index, validChildren.length) : style)]
  })));
};

var _default = Selector;
exports.default = _default;

const select = selector => style => (index, length) => selector(index, length) ? style : null;

exports.select = select;
const firstChild = select(index => index === 0);
exports.firstChild = firstChild;
const notFirstChild = select(index => index !== 0);
exports.notFirstChild = notFirstChild;
const lastChild = select((index, length) => index === length - 1);
exports.lastChild = lastChild;
const notLastChild = select((index, length) => index !== length - 1);
exports.notLastChild = notLastChild;
const even = select(index => index % 2 === 0);
exports.even = even;
const odd = select(index => index % 2 !== 0);
exports.odd = odd;
//# sourceMappingURL=Selector.js.map