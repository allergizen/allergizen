"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Spacer = void 0;

var _react = _interopRequireWildcard(require("react"));

var _Box = _interopRequireDefault(require("./Box"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const Flex = _ref => {
  let {
    fill,
    inline,
    center,
    direction,
    justify,
    items,
    self,
    content,
    wrap,
    basis,
    grow,
    shrink,
    style,
    ...rest
  } = _ref;
  const flex = (0, _react.useMemo)(() => typeof fill === 'boolean' ? fill ? 1 : undefined : fill, [fill]);
  const flexDirection = (0, _react.useMemo)(() => inline ? 'row' : direction, [inline, direction]);
  const justifyContent = (0, _react.useMemo)(() => {
    if (center) return 'center';

    switch (justify) {
      case 'start':
        return 'flex-start';

      case 'end':
        return 'flex-end';

      case 'between':
        return 'space-between';

      case 'around':
        return 'space-around';

      case 'evenly':
        return 'space-evenly';

      default:
        return justify;
    }
  }, [center, justify]);
  const alignItems = (0, _react.useMemo)(() => {
    if (center) return 'center';

    switch (items) {
      case 'start':
        return 'flex-start';

      case 'end':
        return 'flex-end';

      default:
        return items;
    }
  }, [center, items]);
  const alignSelf = (0, _react.useMemo)(() => {
    switch (self) {
      case 'start':
        return 'flex-start';

      case 'end':
        return 'flex-end';

      default:
        return self;
    }
  }, [self]);
  const alignContent = (0, _react.useMemo)(() => {
    switch (content) {
      case 'start':
        return 'flex-start';

      case 'end':
        return 'flex-end';

      case 'between':
        return 'space-between';

      case 'around':
        return 'space-around';

      default:
        return content;
    }
  }, [content]);
  const flexWrap = (0, _react.useMemo)(() => typeof wrap === 'boolean' ? wrap ? 'wrap' : undefined : wrap, [wrap]);
  const flexStyle = (0, _react.useMemo)(() => ({
    flex,
    flexDirection,
    justifyContent,
    alignItems,
    alignSelf,
    alignContent,
    flexWrap,
    flexBasis: basis,
    flexGrow: grow,
    flexShrink: shrink
  }), [flex, flexDirection, justifyContent, alignItems, alignSelf, alignContent, flexWrap, basis, grow, shrink]);
  return /*#__PURE__*/_react.default.createElement(_Box.default, _extends({
    style: [flexStyle, style]
  }, rest));
};

var _default = Flex;
exports.default = _default;

const Spacer = props => {
  return /*#__PURE__*/_react.default.createElement(Flex, _extends({
    fill: true,
    self: "stretch"
  }, props));
};

exports.Spacer = Spacer;
//# sourceMappingURL=Flex.js.map