"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.VStack = exports.HStack = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _Flex = _interopRequireDefault(require("./Flex"));

var _Selector = _interopRequireWildcard(require("./Selector"));

var _Divider = _interopRequireDefault(require("./Divider"));

var _SpacingFuncContext = require("./SpacingFuncContext");

var _utilities = require("./utilities");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const Stack = _ref => {
  let {
    spacing = 0,
    divider = false,
    dividerStyle,
    shouldWrapChildren = false,
    childrenStyle,
    children,
    ...rest
  } = _ref;
  const spacingValue = (0, _SpacingFuncContext.useSpacing)(spacing);
  const direction = (0, _react.useMemo)(() => {
    return rest.inline ? 'row' : rest.direction || 'column';
  }, [rest.inline, rest.direction]);
  const spacingStyle = (0, _react.useMemo)(() => {
    switch (direction) {
      case 'column':
        return {
          marginBottom: spacingValue
        };

      case 'row':
        return {
          marginEnd: spacingValue
        };

      case 'column-reverse':
        return {
          marginTop: spacingValue
        };

      case 'row-reverse':
        return {
          marginStart: spacingValue
        };
    }
  }, [spacingValue, direction]);
  const shouldUseChildren = !shouldWrapChildren && !divider;
  const validChildren = (0, _utilities.getValidChildren)(children);
  const clones = shouldUseChildren ? validChildren : validChildren.map((child, index) => {
    const key = typeof child.key !== 'undefined' ? child.key : index;
    const isLast = index + 1 === validChildren.length;

    const wrappedChild = /*#__PURE__*/_react.default.createElement(StackItem, {
      key: key
    }, child);

    const _child = shouldWrapChildren ? wrappedChild : child;

    if (!divider) return _child;
    const dividerElement = /*#__PURE__*/_react.default.isValidElement(divider) ? divider : /*#__PURE__*/_react.default.createElement(_Divider.default, {
      orientation: direction === 'row' || direction === 'row-reverse' ? 'vertical' : 'horizontal'
    });

    const clonedDivider = /*#__PURE__*/_react.default.cloneElement(dividerElement, {
      key: `${key}-divider`,
      style: [dividerElement.props.style, dividerStyle]
    });

    const _divider = isLast ? null : clonedDivider;

    return [_child, _divider];
  });
  return /*#__PURE__*/_react.default.createElement(_Flex.default, rest, /*#__PURE__*/_react.default.createElement(_Selector.default, {
    childrenStyle: [(0, _Selector.notLastChild)(spacingStyle), childrenStyle]
  }, clones));
};

var _default = Stack;
exports.default = _default;

const StackItem = props => /*#__PURE__*/_react.default.createElement(_reactNative.View, props);

const HStack = _ref2 => {
  let {
    reverse,
    ...rest
  } = _ref2;
  return /*#__PURE__*/_react.default.createElement(Stack, _extends({}, rest, {
    direction: reverse ? 'row-reverse' : 'row'
  }));
};

exports.HStack = HStack;

const VStack = _ref3 => {
  let {
    reverse,
    ...rest
  } = _ref3;
  return /*#__PURE__*/_react.default.createElement(Stack, _extends({}, rest, {
    direction: reverse ? 'column-reverse' : 'column'
  }));
};

exports.VStack = VStack;
//# sourceMappingURL=Stack.js.map