{"version":3,"sources":["Divider.tsx"],"names":["Divider","orientation","thickness","color","style","rest","dividerStyle","height","backgroundColor","width"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;AAyBA,MAAMA,OAA+B,GAAG,QAMlC;AAAA,MANmC;AACvCC,IAAAA,WAAW,GAAG,YADyB;AAEvCC,IAAAA,SAAS,GAAG,CAF2B;AAGvCC,IAAAA,KAAK,GAAG,SAH+B;AAIvCC,IAAAA,KAJuC;AAKvC,OAAGC;AALoC,GAMnC;AACJ,QAAMC,YAAY,GAAG,oBAAQ,MAAM;AACjC,QAAIL,WAAW,KAAK,YAApB,EACE,OAAO;AAAEM,MAAAA,MAAM,EAAEL,SAAV;AAAqBM,MAAAA,eAAe,EAAEL;AAAtC,KAAP,CADF,KAEK,OAAO;AAAEM,MAAAA,KAAK,EAAEP,SAAT;AAAoBM,MAAAA,eAAe,EAAEL;AAArC,KAAP;AACN,GAJoB,EAIlB,CAACF,WAAD,EAAcC,SAAd,EAAyBC,KAAzB,CAJkB,CAArB;AAMA,sBAAO,6BAAC,YAAD;AAAK,IAAA,KAAK,EAAE,CAACG,YAAD,EAAeF,KAAf;AAAZ,KAAuCC,IAAvC,EAAP;AACD,CAdD;;eAgBeL,O","sourcesContent":["import React, { useMemo } from 'react';\nimport type { BoxProps } from './Box';\nimport Box from './Box';\n\nexport interface DividerProps extends BoxProps {\n  /**\n   * The orientation of the divider.\n   *\n   * @default 'horizontal'\n   */\n  orientation?: 'horizontal' | 'vertical';\n\n  /**\n   * The thickness of the divider.\n   *\n   * @default 1\n   */\n  thickness?: number;\n\n  /**\n   * The color of the divider.\n   *\n   * @default '#E0E0E0'\n   */\n  color?: string;\n}\n\nconst Divider: React.FC<DividerProps> = ({\n  orientation = 'horizontal',\n  thickness = 1,\n  color = '#E0E0E0',\n  style,\n  ...rest\n}) => {\n  const dividerStyle = useMemo(() => {\n    if (orientation === 'horizontal')\n      return { height: thickness, backgroundColor: color };\n    else return { width: thickness, backgroundColor: color };\n  }, [orientation, thickness, color]);\n\n  return <Box style={[dividerStyle, style]} {...rest} />;\n};\n\nexport default Divider;\n"]}