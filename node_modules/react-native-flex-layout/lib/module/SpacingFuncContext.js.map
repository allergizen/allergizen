{"version":3,"sources":["SpacingFuncContext.tsx"],"names":["React","createContext","useContext","useMemo","defaultSpacingFunc","space","SpacingFuncContext","useSpacingFunc","useSpacing","size","spacingFunc","SpacingFuncProvider","children"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,OAA3C,QAA0D,OAA1D;AAMA,OAAO,MAAMC,kBAA+B,GAAIC,KAAD,IAAWA,KAAnD;AAEP,OAAO,MAAMC,kBAAkB,gBAAGL,aAAa,CAACG,kBAAD,CAAxC;AAEP,OAAO,MAAMG,cAAc,GAAG,MAAML,UAAU,CAACI,kBAAD,CAAvC;AAEP,OAAO,MAAME,UAAU,GAAIC,IAAD,IAA4B;AACpD,QAAMC,WAAW,GAAGH,cAAc,EAAlC;AACA,SAAOJ,OAAO,CAAC,MAAMO,WAAW,CAACD,IAAD,CAAlB,EAA0B,CAACC,WAAD,EAAcD,IAAd,CAA1B,CAAd;AACD,CAHM;AASP,OAAO,MAAME,mBAAuD,GAAG;AAAA,MAAC;AACtEC,IAAAA,QADsE;AAEtEF,IAAAA,WAAW,GAAGN;AAFwD,GAAD;AAAA,sBAIrE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEM;AAApC,KACGE,QADH,CAJqE;AAAA,CAAhE","sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\n\nexport type Spacing = number | string | undefined;\n\nexport type SpacingFunc = (size?: number | string) => Spacing;\n\nexport const defaultSpacingFunc: SpacingFunc = (space) => space;\n\nexport const SpacingFuncContext = createContext(defaultSpacingFunc);\n\nexport const useSpacingFunc = () => useContext(SpacingFuncContext);\n\nexport const useSpacing = (size?: number | string) => {\n  const spacingFunc = useSpacingFunc();\n  return useMemo(() => spacingFunc(size), [spacingFunc, size]);\n};\n\nexport interface SpacingFuncProviderProps {\n  spacingFunc?: SpacingFunc;\n}\n\nexport const SpacingFuncProvider: React.FC<SpacingFuncProviderProps> = ({\n  children,\n  spacingFunc = defaultSpacingFunc,\n}) => (\n  <SpacingFuncContext.Provider value={spacingFunc}>\n    {children}\n  </SpacingFuncContext.Provider>\n);\n"]}