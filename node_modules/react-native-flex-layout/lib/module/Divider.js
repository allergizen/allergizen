function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { useMemo } from 'react';
import Box from './Box';

const Divider = _ref => {
  let {
    orientation = 'horizontal',
    thickness = 1,
    color = '#E0E0E0',
    style,
    ...rest
  } = _ref;
  const dividerStyle = useMemo(() => {
    if (orientation === 'horizontal') return {
      height: thickness,
      backgroundColor: color
    };else return {
      width: thickness,
      backgroundColor: color
    };
  }, [orientation, thickness, color]);
  return /*#__PURE__*/React.createElement(Box, _extends({
    style: [dividerStyle, style]
  }, rest));
};

export default Divider;
//# sourceMappingURL=Divider.js.map