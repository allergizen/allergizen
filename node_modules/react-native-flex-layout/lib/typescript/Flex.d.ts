import React from 'react';
import type { FlexStyle } from 'react-native';
import type { BoxProps } from './Box';
export interface FlexProps extends BoxProps {
    /**
     * Shorthand for the `flex` style property.
     * If `true` is passed, the `flex` style property will be set to `1`.
     */
    fill?: boolean | number;
    /**
     * Shorthand for `{ flexDirection: "row" }`.
     */
    inline?: boolean;
    /**
     * Shorthand for `{ justifyContent: "center", alignItems: "center" }`.
     */
    center?: boolean;
    /**
     * Shorthand for the `flexDirection` style property.
     */
    direction?: FlexStyle['flexDirection'];
    /**
     * Shorthand for the `justifyContent` style property.
     * If `center` prop is set to `true`, `justifyContent` will be forced to `center`.
     */
    justify?: 'start' | 'end' | 'center' | 'between' | 'around' | 'evenly';
    /**
     * Shorthand for the `alignItems` style property.
     * If `center` prop is set to `true`, `alignItems` will be forced to `center`.
     */
    items?: 'start' | 'end' | 'center' | 'stretch' | 'baseline';
    /**
     * Shorthand for the `alignSelf` style property.
     */
    self?: 'auto' | 'start' | 'end' | 'center' | 'stretch' | 'baseline';
    /**
     * Shorthand for the `alignContent` style property.
     */
    content?: 'start' | 'end' | 'center' | 'stretch' | 'between' | 'around';
    /**
     * Shorthand for the `flexWrap` style property.
     * If `true` is passed, the `flexWrap` style property will be set to `wrap`.
     */
    wrap?: boolean | FlexStyle['flexWrap'];
    /**
     * Shorthand for the `flexBasis` style property.
     */
    basis?: FlexStyle['flexBasis'];
    /**
     * Shorthand for the `flexGrow` style property.
     */
    grow?: FlexStyle['flexGrow'];
    /**
     * Shorthand for the `flexShrink` style property.
     */
    shrink?: FlexStyle['flexShrink'];
}
declare const Flex: React.FC<FlexProps>;
export default Flex;
export declare const Spacer: React.FC<FlexProps>;
